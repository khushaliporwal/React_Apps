{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","_useState","useState","color","backgroundColor","_useState2","Object","slicedToArray","Statestyle","SetStatestyle","_useState3","_useState4","btnText","SetBtnText","react_default","a","createElement","Fragment","className","style","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","onClick","Navbar","props","concat","mode","dist","to","title","aria-label","aria-current","home","about","toggle","role","forhtml","TextForm","text","SetText","name","value","onChange","event","console","log","target","rows","toUpperCase","showAlert","toLowerCase","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","toogle","document","getElementById","textContent","innerHTML","cancel","replace","split","filter","length","trim","Alert","alert","word","tmpstr","charAt","slice","capitalize","defaultProps","App","SetMode","SetAlert","setTimeout","_useState5","_useState6","SetColor","FillColor","red","blue","green","body","react_router_dist","exact","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"wOAEe,SAASA,IAAQ,IAAAC,EAEOC,mBAAS,CACxCC,MAAQ,QACRC,gBAAkB,UACpBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GAHIO,EAAUH,EAAA,GAAEI,EAAaJ,EAAA,GAAAK,EAKFR,mBAAS,oBAAmBS,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAAnDE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAoB3B,OACEG,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACIH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAAYC,MAAOX,GAC9BM,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAAYE,GAAG,mBAAmBD,MAAOX,GACpDM,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBAAiBC,MAAOX,GACnCM,EAAAC,EAAAC,cAAA,MAAIE,UAAU,mBAAmBE,GAAG,cACpCN,EAAAC,EAAAC,cAAA,UAAQE,UAAU,mBAAmBC,MAAOX,EAAYa,KAAK,SAASC,iBAAe,WAAWC,iBAAe,eAAeC,gBAAc,OAAOC,gBAAc,eAAc,sBAI/KX,EAAAC,EAAAC,cAAA,OAAKI,GAAG,cAAcF,UAAU,mCAAmCC,MAAOX,EAAYkB,kBAAgB,aAAaC,iBAAe,qBAClIb,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBAAiBC,MAAOX,GACnCM,EAAAC,EAAAC,cAAA,cAAQ,4CAAiD,6WAA0WF,EAAAC,EAAAC,cAAA,YAAM,mBAAsB,kDAIvcF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACXJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,mBAAmBE,GAAG,cACpCN,EAAAC,EAAAC,cAAA,UAAQE,UAAU,6BAA6BG,KAAK,SAASC,iBAAe,WAAWC,iBAAe,eAAeC,gBAAc,QAAQC,gBAAc,eAAc,sBAIvKX,EAAAC,EAAAC,cAAA,OAAKI,GAAG,cAAcF,UAAU,8BAA8BQ,kBAAgB,aAAaC,iBAAe,qBAC1Gb,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACXJ,EAAAC,EAAAC,cAAA,cAAQ,6CAAkD,8WAA2WF,EAAAC,EAAAC,cAAA,YAAM,mBAAsB,kDAIzcF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACXJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,mBAAmBE,GAAG,gBACpCN,EAAAC,EAAAC,cAAA,UAAQE,UAAU,6BAA6BG,KAAK,SAASC,iBAAe,WAAWC,iBAAe,iBAAiBC,gBAAc,QAAQC,gBAAc,iBAAgB,sBAI3KX,EAAAC,EAAAC,cAAA,OAAKI,GAAG,gBAAgBF,UAAU,8BAA8BQ,kBAAgB,eAAeC,iBAAe,qBAC9Gb,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACXJ,EAAAC,EAAAC,cAAA,cAAQ,4CAAiD,8WAA2WF,EAAAC,EAAAC,cAAA,YAAM,mBAAsB,oDAMhdF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACfJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,kBAAkBU,QA9DlB,WAEM,UAArBpB,EAAWL,OAEVM,EAAc,CACVN,MAAQ,QACRC,gBAAkB,UAEtBS,EAAW,uBAGXJ,EAAc,CACVN,MAAQ,QACRC,gBAAkB,UAEtBS,EAAW,sBA+C6CQ,KAAK,UAAUT,gBCnEpE,SAASiB,EAAOC,GAC7B,OACEhB,EAAAC,EAAAC,cAAA,OAAKE,UAAS,kCAAAa,OAAoCD,EAAME,KAAI,QAAAD,OAAOD,EAAME,OACvElB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACbJ,EAAAC,EAAAC,cAACiB,EAAA,EAAI,CAACf,UAAU,eAAegB,GAAG,KAAKJ,EAAMK,OAC7CrB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,iBAAiBG,KAAK,SAASC,iBAAe,WAAWC,iBAAe,0BAA0BE,gBAAc,yBAAyBD,gBAAc,QAAQY,aAAW,qBAC1LtB,EAAAC,EAAAC,cAAA,QAAME,UAAU,yBAElBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2BAA2BE,GAAG,0BAC3CN,EAAAC,EAAAC,cAAA,MAAIE,UAAU,mCACZJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,YACZJ,EAAAC,EAAAC,cAACiB,EAAA,EAAI,CAACf,UAAU,kBAAkBmB,eAAa,OAAOH,GAAG,KAAKJ,EAAMQ,OAEtExB,EAAAC,EAAAC,cAAA,MAAIE,UAAU,YACZJ,EAAAC,EAAAC,cAACiB,EAAA,EAAI,CAACf,UAAU,WAAWgB,GAAG,UAAUJ,EAAMS,SAUlDzB,EAAAC,EAAAC,cAAA,OAAKE,UAAS,+BAAAa,OAAgD,SAAfD,EAAME,KAAkB,QAAU,SAC/ElB,EAAAC,EAAAC,cAAA,SAAOE,UAAU,mBAAmBU,QAASE,EAAMU,OAASnB,KAAK,WAAWoB,KAAK,SAASrB,GAAG,2BAC7FN,EAAAC,EAAAC,cAAA,SAAOE,UAAU,mBAAmBwB,QAAQ,0BAAyB,UAAuB,SAAfZ,EAAME,KAAkB,QAAU,OAAO,aC7BnH,SAASW,EAASb,GAAO,IAAA7B,EAEZC,mBAAS,mBAAkBG,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GAA5C2C,EAAIvC,EAAA,GAAEwC,EAAOxC,EAAA,GAgCtB,OACES,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACAH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAAYC,MAAO,CAAChB,MAAqB,QAAd2B,EAAME,KAAgB,QAAU,UACtElB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACXJ,EAAAC,EAAAC,cAAA,UAAKc,EAAMgB,MACXhC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACfJ,EAAAC,EAAAC,cAAA,YAAUE,UAAU,eAAe6B,MAAOH,EAAMzB,MAAO,CAACf,gBAA+B,QAAd0B,EAAME,KAAgB,OAAS,QAAS7B,MAAqB,QAAd2B,EAAME,KAAgB,QAAU,SAAUZ,GAAG,SAAS4B,SA3B/J,SAACC,GACpBC,QAAQC,IAAI,oBACZN,EAAQI,EAAMG,OAAOL,QAyBuLM,KAAK,OAE7MvC,EAAAC,EAAAC,cAAA,UAAQK,KAAK,SAASH,UAAU,uBAAuBU,QAvCzC,WAClBiB,EAAQD,EAAKU,eACbxB,EAAMyB,UAAU,0BAA2B,aAqCwC,yBAC/EzC,EAAAC,EAAAC,cAAA,UAAQK,KAAK,SAASH,UAAU,uBAAuBU,QAnCxC,WACnBiB,EAAQD,EAAKY,eACb1B,EAAMyB,UAAU,0BAA2B,aAiCyC,yBAChFzC,EAAAC,EAAAC,cAAA,UAAQK,KAAK,SAASO,QA1BhB,WACV,IAAI6B,EAAM,IAAIC,yBAAyBd,GACvCe,OAAOC,gBAAgBC,MAAMJ,GAC7B,IAAMK,EAASC,SAASC,eAAe,UACZ,UAAvBF,EAAOG,YACPH,EAAOI,UAAY,QAGnBJ,EAAOI,UAAY,QACM,UAArBJ,EAAOI,WACPP,OAAOC,gBAAgBO,WAgBWjD,UAAU,4BAA4BE,GAAG,UAAS,UAE5FN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACXJ,EAAAC,EAAAC,cAAA,SAAG,gBAAc4B,EAAKwB,QAAQ,MAAO,KAAKC,MAAM,KAAKC,OAAO,SAAAvB,GAAK,MAAc,KAAVA,IAAcwB,OAAO,sBAAoB3B,EAAK4B,OAAOD,QAC1HzD,EAAAC,EAAAC,cAAA,SAAI,KAAQ4B,EAAKwB,QAAQ,MAAO,KAAKC,MAAM,KAAKC,OAAO,SAAAvB,GAAK,MAAc,KAAVA,IAAcwB,OAAO,iBACrFzD,EAAAC,EAAAC,cAAA,UAAI,WACJF,EAAAC,EAAAC,cAAA,SAAI4B,MClDD,SAAS6B,EAAM3C,GAQ5B,OACEA,EAAM4C,OAAS5D,EAAAC,EAAAC,cAAA,OAAKE,UAAS,eAAAa,OAAiBD,EAAM4C,MAAMrD,KAAI,gCAAgCoB,KAAK,SAC/F3B,EAAAC,EAAAC,cAAA,cARe,SAAC2D,GAEhB,IAAIC,EAASD,EAAKnB,cAClB,OAAOoB,EAAOC,OAAO,GAAGvB,cAAgBsB,EAAOE,MAAM,GAK5CC,CAAWjD,EAAM4C,MAAMrD,MAAM,MAAIS,EAAM4C,MAAMjB,MFqC9D5B,EAAOmD,aAAe,CAClB7C,MAAQ,gBACRI,MAAQ,QACRD,KAAO,mBGoBI2C,MA1Df,WAAe,IAAAhF,EAEWC,mBAAS,SAAQG,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GAAlC+B,EAAI3B,EAAA,GAAE6E,EAAO7E,EAAA,GAAAK,EACKR,mBAAS,MAAKS,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAAjCgE,EAAK/D,EAAA,GAAEwE,EAAQxE,EAAA,GAiBf4C,EAAY,SAACE,EAAKpC,GAEtB8D,EAAS,CACP1B,IAAMA,EACNpC,KAAMA,IAER+D,WAAW,WACTD,EAAS,OACR,MACJE,EAEwBnF,mBAAS,MAAKoF,EAAAhF,OAAAC,EAAA,EAAAD,CAAA+E,EAAA,GAA1BE,GAAFD,EAAA,GAAUA,EAAA,IAWrB,OACExE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACAH,EAAAC,EAAAC,cAACiB,EAAA,EAAM,KACLnB,EAAAC,EAAAC,cAACa,EAAM,CAACM,MAAM,YAAYqD,UAZZ,WAEhBD,EAAS,CACPE,IAAM,MACNC,KAAO,OACPC,MAAQ,WAOwC3D,KAAMA,EAAMQ,OAxC7C,WAEL,UAATR,GAEDkD,EAAQ,QACRnB,SAAS6B,KAAKzE,MAAMf,gBAAkB,OACtCmD,EAAU,oBAAqB,aAG/B2B,EAAQ,SACRnB,SAAS6B,KAAKzE,MAAMf,gBAAkB,QACtCmD,EAAU,qBAAsB,eA8BhCzC,EAAAC,EAAAC,cAACyD,EAAK,CAACC,MAAOA,IACd5D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAC6E,EAAA,EAAM,KACL/E,EAAAC,EAAAC,cAAC6E,EAAA,EAAK,CAACC,OAAK,EAACC,KAAK,SAASC,QAASlF,EAAAC,EAAAC,cAAChB,EAAK,QAC1Cc,EAAAC,EAAAC,cAAC6E,EAAA,EAAK,CAACC,OAAK,EAACC,KAAK,IAAIC,QAAUlF,EAAAC,EAAAC,cAAC2B,EAAQ,CAACG,KAAK,kBAAkBd,KAAQA,EAAMuB,UAAYA,WCpDtF0C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWhD,SAASC,eAAe,SACpDgD,OACHlG,EAAAC,EAAAC,cAACF,EAAAC,EAAMkG,WAAU,KACfnG,EAAAC,EAAAC,cAACkG,EAAG,QAORjB","file":"static/js/main.930dcb47.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\nexport default function About() {\r\n\r\n    const[Statestyle, SetStatestyle] = useState({\r\n        color : 'white',\r\n        backgroundColor : 'black'\r\n    })\r\n\r\n    const[btnText, SetBtnText] = useState('Enable Dark mode');\r\n    const onButtonClick = () => {\r\n        \r\n        if(Statestyle.color === 'black')\r\n        {\r\n            SetStatestyle({\r\n                color : 'white',\r\n                backgroundColor : 'black'\r\n            })\r\n            SetBtnText(\"Enable Light mode\");\r\n        }\r\n        else{\r\n            SetStatestyle({\r\n                color : 'black',\r\n                backgroundColor : 'white'\r\n            })\r\n            SetBtnText(\"Enable Dark mode\");\r\n        }\r\n    }\r\n\r\n  return (\r\n    <>\r\n        <div className='container' style={Statestyle}>\r\n            <div className=\"accordion\" id=\"accordionExample\" style={Statestyle}>\r\n                <div className=\"accordion-item\" style={Statestyle}>\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                    <button className=\"accordion-button\" style={Statestyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                        Accordion Item #1\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" style={Statestyle} aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\" style={Statestyle}>\r\n                        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                    <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                        Accordion Item #2\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\">\r\n                        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                    <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                        Accordion Item #3\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\">\r\n                        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className='container my-3'>\r\n        <button className=\"btn btn-primary\" onClick={onButtonClick} type=\"submit\">{btnText}</button>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ColourPalette from './ColourPalette';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">{props.home}</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n            </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\" role=\"search\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n            <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n          </form> */}\r\n          \r\n          {/* <ColourPalette color = {props.color} Fillcolor = {props.Fillcolor}/> */}\r\n\r\n          <div className={`form-check form-switch text-${props.mode === 'dark' ? 'light' : 'dark'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggle}  type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" forhtml=\"flexSwitchCheckDefault\">Enable {props.mode === 'dark' ? 'light' : 'dark'} mode</label>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\n\r\n\r\nNavbar.propTypes = {\r\n    title : PropTypes.string.isRequired,\r\n    about : PropTypes.string.isRequired,\r\n    home: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title : 'Default Title',\r\n    about : 'About',\r\n    home : 'Home'\r\n  }\r\n\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const [text, SetText] = useState('Enter your text');\r\n    const handleUpClick = () => {\r\n        SetText(text.toUpperCase());\r\n        props.showAlert('Converted to upper case', 'success');\r\n    }\r\n\r\n    const handleLowClick = () => {\r\n        SetText(text.toLowerCase());\r\n        props.showAlert('Converted to lower case', 'success');\r\n    }\r\n\r\n    const handleOnChange = (event) =>    {\r\n        console.log(\"handle on change\");\r\n        SetText(event.target.value)\r\n    }\r\n    \r\n    const speak = () => {\r\n        let msg = new SpeechSynthesisUtterance(text);\r\n        window.speechSynthesis.speak(msg);\r\n        const toogle = document.getElementById('toggle')\r\n        if (toogle.textContent === \"Speak\") {\r\n            toogle.innerHTML = \"Stop\"\r\n        }\r\n        else {\r\n            toogle.innerHTML = \"Speak\"\r\n            if (toogle.innerHTML === \"Speak\"){\r\n                window.speechSynthesis.cancel()\r\n            }\r\n        }\r\n\r\n      }\r\n\r\n  return (\r\n    <>\r\n    <div className='container' style={{color: props.mode == 'dark'? 'white' : 'black'}}>\r\n        <div className='my-3'>\r\n            <h1>{props.name}</h1>\r\n            <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value={text} style={{backgroundColor: props.mode == 'dark'? 'grey' : 'white', color: props.mode == 'dark'? 'white' : 'black'}} id=\"myText\" onChange={handleOnChange} rows=\"8\"></textarea>\r\n            </div>\r\n            <button type=\"button\" className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to Upper case</button>\r\n            <button type=\"button\" className=\"btn btn-primary mx-1\" onClick={handleLowClick}>Convert to Lower case</button>\r\n            <button type=\"submit\" onClick={speak} className=\"btn btn-warning mx-2 my-2\" id=\"toggle\">Speak</button>\r\n        </div>\r\n        <div className='container'>\r\n            <p>Word count = {text.replace(/\\n/g, \" \").split(' ').filter(value => value !== \"\").length} character count = {text.trim().length}</p>\r\n            <p>{0.008 * text.replace(/\\n/g, \" \").split(' ').filter(value => value !== \"\").length} Minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text}</p>\r\n        </div>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n    const capitalize = (word) =>\r\n    {\r\n        let tmpstr = word.toLowerCase();\r\n        return tmpstr.charAt(0).toUpperCase() + tmpstr.slice(1);\r\n    }\r\n\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)} : {props.alert.msg}</strong>\r\n    </div>\r\n  )\r\n}\r\n","import './App.css';\r\nimport About from './components/About';\r\nimport Navbar from './components/Navbar';\r\nimport TextForm from './components/TextForm';\r\nimport React, { useState } from 'react'\r\nimport Alert from './components/Alert';\r\n\r\nimport {\r\n  HashRouter as Router,\r\n  Routes,\r\n  Route,\r\n  Link,\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n\r\n  const [mode, SetMode] = useState(\"light\");\r\n  const[alert, SetAlert] = useState(null);\r\n\r\n  const toggleMode = () => \r\n  {\r\n    if(mode === 'light')\r\n    {\r\n      SetMode('dark');\r\n      document.body.style.backgroundColor = 'grey';\r\n      showAlert(\"Dark mode enabled\", 'success');\r\n    }\r\n    else{\r\n      SetMode('light');\r\n      document.body.style.backgroundColor = 'white';\r\n      showAlert(\"Light mode enabled\", 'success');\r\n    }\r\n  }\r\n\r\n  const showAlert = (msg, type) =>\r\n  {\r\n    SetAlert({\r\n      msg : msg,\r\n      type: type\r\n    })\r\n    setTimeout(() => {\r\n      SetAlert(null)\r\n    }, 1000);\r\n  }\r\n\r\n  const[color, SetColor] = useState(null);\r\n  \r\n  const FillColor = () =>\r\n  {\r\n    SetColor({\r\n      red : 'red',\r\n      blue : 'blue',\r\n      green : 'green'\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <Router>\r\n      <Navbar title='TextUtils' FillColor={FillColor} mode={mode} toggle={toggleMode}/>\r\n      <Alert alert={alert}/>\r\n      <div className='container' >\r\n        <Routes>\r\n          <Route exact path=\"/about\" element={<About />} />\r\n          <Route exact path=\"/\" element= {<TextForm name='Enter your data' mode = {mode} showAlert= {showAlert}/>} />\r\n        </Routes>\r\n      </div>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}